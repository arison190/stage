{"version":3,"sources":["server.js"],"names":["express","require","connectDB","cors","userRoutes","depenseRoutes","transfertRoutes","emailRoutes","dotenv","config","app","use","json","corsOptions","origin","methods","allowedHeaders","err","req","res","next","console","error","stack","status","message","PORT","process","env","listen","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAMK,eAAe,GAAGL,OAAO,CAAC,0BAAD,CAA/B;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,sBAAD,CAA3B,C,CAAqD;;;AACrD,IAAMO,MAAM,GAAGP,OAAO,CAAC,QAAD,CAAtB,C,CAEA;;;AACAO,MAAM,CAACC,MAAP;AACAP,SAAS;AAET,IAAMQ,GAAG,GAAGV,OAAO,EAAnB,C,CAEA;;AACAU,GAAG,CAACC,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR,E,CAAyB;AAEzB;;AACA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,uBADQ;AACiB;AACjCC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,CAFO;AAE2B;AAC3CC,EAAAA,cAAc,EAAE,CAAC,cAAD,EAAiB,eAAjB,CAHA,CAGmC;;AAHnC,CAApB,C,CAMA;;AACAN,GAAG,CAACC,GAAJ,CAAQR,IAAI,CAACU,WAAD,CAAZ,E,CAEA;;AACAH,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBP,UAAhB;AACAM,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBN,aAAzB;AACAK,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBJ,WAAvB,E,CAAqC;;AACrCG,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BL,eAA3B,E,CAGA;;AACAI,GAAG,CAACC,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BC,EAAAA,OAAO,CAACC,KAAR,CAAcL,GAAG,CAACM,KAAlB;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqB;AAAEa,IAAAA,OAAO,EAAE;AAAX,GAArB;AACH,CAHD,E,CAKA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAhB,GAAG,CAACmB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACnBL,EAAAA,OAAO,CAACS,GAAR,6CAA2CJ,IAA3C;AACH,CAFD","sourcesContent":["const express = require('express');\r\nconst connectDB = require('./config/db');\r\nconst cors = require('cors');\r\nconst userRoutes = require('./routes/user');\r\nconst depenseRoutes = require('./routes/depenseRoutes');\r\nconst transfertRoutes = require('./routes/transfertRoutes');\r\nconst emailRoutes = require('./routes/emailRoutes'); // Assurez-vous d'importer les routes d'email\r\nconst dotenv = require('dotenv');\r\n\r\n// Charger les variables d'environnement\r\ndotenv.config();\r\nconnectDB();\r\n\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(express.json()); // Middleware pour parser le JSON\r\n\r\n// Configuration de CORS\r\nconst corsOptions = {\r\n    origin: 'http://localhost:3000', // Frontend React sur localhost:3000\r\n    methods: ['GET', 'POST', 'PUT', 'DELETE'], // Méthodes autorisées\r\n    allowedHeaders: ['Content-Type', 'Authorization'], // En-têtes autorisés\r\n};\r\n\r\n// Appliquer le middleware CORS\r\napp.use(cors(corsOptions));\r\n\r\n// Routes\r\napp.use('/api', userRoutes);\r\napp.use('/api/depenses', depenseRoutes);\r\napp.use('/api/emails', emailRoutes); // Assurez-vous que emailRoutes est défini\r\napp.use('/api/transferts', transfertRoutes);\r\n\r\n\r\n// Middleware de gestion des erreurs\r\napp.use((err, req, res, next) => {\r\n    console.error(err.stack);\r\n    res.status(500).json({ message: 'Quelque chose a mal tourné !' });\r\n});\r\n\r\n// Démarrer le serveur\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n    console.log(`Serveur démarré sur le port ${PORT}`);\r\n});\r\n"],"file":"server.dev.js"}