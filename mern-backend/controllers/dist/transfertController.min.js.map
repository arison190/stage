{"version":3,"sources":["transfertController.js"],"names":["Transfert","require","exports","createTransfert","req","res","transfert","regeneratorRuntime","async","_context","prev","next","awrap","save","status","json","t0","message","stop","getAllTransferts","transferts","_context2","find","sent","findById","params","id","_context3","updateTransfert","_context4","findByIdAndUpdate","body","new","abrupt","deleteTransfert","_context5","findByIdAndDelete","send"],"mappings":"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","file":"transfertController.min.js","sourcesContent":["// controllers/transfertController.js\r\nconst Transfert = require('../models/Transfert');\r\n\r\n// Créer un transfert\r\nexports.createTransfert = async (req, res) => {\r\n    try {\r\n        const transfert = new Transfert(req.body);\r\n        await transfert.save();\r\n        res.status(201).json(transfert);\r\n    } catch (error) {\r\n        res.status(400).json({ message: error.message });\r\n    }\r\n};\r\n\r\n// Obtenir tous les transferts\r\nexports.getAllTransferts = async (req, res) => {\r\n    try {\r\n        const transferts = await Transfert.find();\r\n        res.status(200).json(transferts);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\n// Obtenir un transfert par ID\r\nexports.getTransfertById = async (req, res) => {\r\n    try {\r\n        const transfert = await Transfert.findById(req.params.id);\r\n        if (!transfert) return res.status(404).json({ message: 'Transfert non trouvé' });\r\n        res.status(200).json(transfert);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};\r\n\r\n// Mettre à jour un transfert\r\nexports.updateTransfert = async (req, res) => {\r\n    try {\r\n        const transfert = await Transfert.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n        if (!transfert) return res.status(404).json({ message: 'Transfert non trouvé' });\r\n        res.status(200).json(transfert);\r\n    } catch (error) {\r\n        res.status(400).json({ message: error.message });\r\n    }\r\n};\r\n\r\n// Supprimer un transfert\r\nexports.deleteTransfert = async (req, res) => {\r\n    try {\r\n        const transfert = await Transfert.findByIdAndDelete(req.params.id);\r\n        if (!transfert) return res.status(404).json({ message: 'Transfert non trouvé' });\r\n        res.status(204).send();\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n};"]}